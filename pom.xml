<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.melo</groupId>
	<artifactId>focus</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>focus</name>
	<description>Demo project for Spring Boot</description>

	<!-- springboot项目的父项目，该项目定义了springboot的基础依赖和默认的配置内容，比如application.properties配置文件的默认地址 -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.10.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<spring-cloud.version>Dalston.RELEASE</spring-cloud.version>
	</properties>

	<dependencies>
		<!-- springboot\redis -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
		
		       <!-- redisson -->
		<dependency>
			<groupId>org.redisson</groupId>
			<artifactId>redisson</artifactId>
			<version>3.4.3</version>
		</dependency>
		<!-- thymeleaf -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<!-- web模块，开发web应用，包含了springmvc和嵌入式的tomcat,，所以才能以 -jar的形式启动，并实现Restful api -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- mybatis出的和springboot整合 -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>1.3.1</version>
		</dependency>
	
		<!-- mysql -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- springboot test模块，通用测试，不仅是单元测试 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
		    <groupId>org.apache.shiro</groupId>
		    <artifactId>shiro-spring</artifactId>
		    <version>1.3.2</version>
		</dependency>
				<!-- shiro+redis缓存插件 -->
		<dependency>
			<groupId>org.crazycake</groupId>
			<artifactId>shiro-redis</artifactId>
			<version>2.4.2.1-RELEASE</version>
		</dependency>
		
		<!-- swagger -->
		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-swagger2</artifactId>
		    <version>2.2.2</version>
		 </dependency>
		 <dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-swagger-ui</artifactId>
		    <version>2.2.2</version>
		 </dependency>
		 
		 <!-- StringUtils -->
 		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.5</version>
		</dependency>
		
		<!-- entityUtils -->
 		<dependency>
 			<groupId>org.springframework</groupId>
 			<artifactId>spring-beans</artifactId>
 		</dependency>
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper</artifactId>
            <version>5.0.1</version>
        </dependency>
			<!-- 热启动 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>
       <!-- 监控，一些原生端点 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
	</dependencies>
	<build>
	<pluginManagement>
		<plugins>
		<!-- springboot 的maven插件，这样可以通过 mvn srping-boot:run 启动项目-->
			<plugin>
	            <groupId>org.springframework.boot</groupId>
	            <artifactId>spring-boot-maven-plugin</artifactId>
	            <configuration>
	                <fork>true</fork>
	            </configuration>
	        </plugin>
	        
			<!-- 逆向生成插件 -->
			 <plugin>
			   <groupId>org.mybatis.generator</groupId>
			     <artifactId>mybatis-generator-maven-plugin</artifactId>
			      <version>1.3.2</version>
			     <configuration>
			         <configurationFile>generator.xml</configurationFile>
			         <verbose>true</verbose>
			          <overwrite>true</overwrite>
			      </configuration>     
			      <executions>
			         <execution>
			            <id>Generate MyBatis Artifacts</id>
			            <goals>
			                 <goal>generate</goal>
			             </goals>
			         </execution>
			     </executions>
			       <dependencies>  
	                    <dependency>  
	                        <groupId>mysql</groupId>  
	                        <artifactId>mysql-connector-java</artifactId>  
	                        <version>5.1.6</version>  
	                    </dependency>  
	                    <dependency>  
	                        <groupId>org.mybatis.generator</groupId>  
	                        <artifactId>mybatis-generator-core</artifactId>  
	                        <version>1.3.2</version>  
	                    </dependency>  
	                    <dependency>  
	                        <groupId>org.mybatis</groupId>  
	                        <artifactId>mybatis</artifactId>  
	                        <version>3.2.2</version>  
	                    </dependency>  
	                </dependencies>  
			 </plugin>
		</plugins>
	  </pluginManagement>
	</build>
	
	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<logback.loglevel>DEBUG</logback.loglevel>
				<spring.profiles.active>dev</spring.profiles.active>
			</properties>
			<dependencies>
				<!-- 热启动 -->
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-devtools</artifactId>
					<scope>runtime</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<failOnMissingWebXml>false</failOnMissingWebXml>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>


		<profile>
			<id>prod</id>
			<properties>
				<logback.loglevel>INFO</logback.loglevel>
				<spring.profiles.active>prod</spring.profiles.active>
			</properties>
			<dependencies>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<failOnMissingWebXml>false</failOnMissingWebXml>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>


</project>
